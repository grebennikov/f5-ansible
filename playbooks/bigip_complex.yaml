---

- hosts: f5
  connection: local
  tasks:
    - name: Create HTTP Monitor
      bigip_monitor_http:
          name: "{{ monitor_name }}"
          password: "{{ bigip_password }}"
          receive: "{{ receive_string }}"
          send: "{{ send_string }}"
          server: "{{ inventory_hostname }}"
          server_port: "{{ bigip_port }}"
          state: "present"
          user: "{{ bigip_username }}"
          validate_certs: "{{ validate_certs }}"
      when: monitor_name is defined
      register: result

    - name: Create pool
      bigip_pool:
          name: "{{ pool_name }}"
#          name: "{{ item }}"
          password: "{{ bigip_password }}"
          server: "{{ inventory_hostname }}"
          server_port: "{{ bigip_port }}"
          state: "present"
          user: "{{ bigip_username }}"
          validate_certs: "{{ validate_certs }}"
          monitors: "{{ pool_monitors }}"
      register: result
#      with_items: "{{ pool_names }}"
#      vars:
#          - pool_names:
#            - "foo.pool"
#            - "bar.pool"
#            - "pool1.pool"
 
    - name: Add pool member
      bigip_pool_member:
          connection_limit: "{{ connection_limit }}"
          description: "{{ item }}"
          host: "{{ hostvars[item]['ansible_ssh_host'] }}"
          partition: "{{ bigip_partition }}"
          password: "{{ bigip_password }}"
          pool: "{{ pool_name }}"
          port: "{{ pool_member_port }}"
#          port: "{{ node_port }}"
          rate_limit: "{{ rate_limit }}"
          ratio: "{{ ratio }}"
          server: "{{ inventory_hostname }}"
          server_port: "{{ bigip_port }}"
          state: "present"
          user: "{{ bigip_username }}"
          validate_certs: "{{ validate_certs }}"
      with_items: "{{ inv_hosts_group }}"
#      with_items: "{{ pool_members }}"
#      with_items: 
#          - ip: 10.0.0.1
#            desc: "node1"
#          - ip: 10.0.0.2
#            desc: "node2"
#      vars:
#          - pool_members: "{{ groups['glance_api']}}"
#          - pool_name: pool1.pool
#          - node_port: 80
      register: result

    - name: Add virtual address
      bigip_virtual_address:
          address: "{{ item }}"
          partition: "{{ bigip_partition }}"
          password: "{{ bigip_password }}"
          server: "{{ inventory_hostname }}"
          server_port: "{{ bigip_port }}"
          state: "present"
          user: "{{ bigip_username }}"
          validate_certs: "{{ validate_certs }}"
      when: va_address is defined
      with_items: "{{ va_address }}"
      register: result
#      vars:
#          - va_address: 10.0.0.100


    - name: Add virtual server
      bigip_virtual_server:
          all_profiles: "{{ vs_profiles1 }}"
          description: "{{ vs_description }}"
          destination: "{{ item }}"
          name: "{{ vs_name }}_{{ item }}"
          partition: "{{ bigip_partition }}"
          password: "{{ bigip_password }}"
          port: "{{ vs_port }}"
          pool: "{{ pool_name }}"
          server: "{{ inventory_hostname }}"
          server_port: "{{ bigip_port }}"
          snat: "{{ snat_pool }} |default('Automap')"
          state: "present"
          user: "{{ bigip_username }}"
          validate_certs: "{{ validate_certs }}"
      with_items: "{{ vs_address }}"
      register: result
#      vars:
#          - vs_profiles1:
#            - tcp
#            - http
#          - node_host: "10.0.0.100"
#          - vs_description: "newserver111"
#          - vs_name: "newserver1"
#          - vs_port1: 80
#          - vs_snat1: "Automap"
#          - pool_name: pool1.pool


